# -*- coding: utf-8 -*-
sendaround=Odeslat kolem
entervalid=Vložte výše platné datum
willsendat=Bude odesláno okolo
sendwithfunction=Odeslat na základě funkce „%1$S“
sendspecifyfunction=Vyberte funkci z menu nahoře
January=Leden
February=Únor
March=Březen
April=Duben
May=Květen
June=Červen
July=Červenec
August=Srpen
September=Září
October=Říjen
November=Listopad
December=Prosinec
OptionShortcutAlertTitle=Neplatná hodnota předvolby
OptionShortcutAlertText=Předvolba %1$S má neplatnou hodnotu „%2$S“
SendingUnsentError={NAME}: Chyba při odesílání neodeslané zprávy. Vaše „Odchozí pošta“ může být poškozena a zprávy naplánované pro odeslání nemusely být odeslány. Více na https://blog.kamens.us/send-later/#outbox.
CorruptFolderError={NAME}: složka %S může být poškozena. Otevřete její vlastnosti a opravte ji. Viz https://blog.kamens.us/send-later/#corrupt-drafts-error.
every_minutely=každých %S minut
every_daily=každých %S dní
every_weekly=každých %S týdnů
every_monthly=každých %S měsíců
every_yearly=každé %S roky
everyempty=týden v měsíci
everymonthly=%1$S %2$S v měsíci
everymonthly_short=%1$S %2$S
betw_times=mezi %S:%S a %S:%S
only_on_days=v %S
day0=Neděli
day1=Pondělí
day2=Úterý
day3=Středu
day4=Čtvrtek
day5=Pátek
day6=Sobotu
AreYouSure=Opravdu?
OutboxConfirmMessage=Kliknutí na tlačítko „Dát do „Pošty k odeslání““ vloží zprávu okamžitě do vaší „Pošty k odeslání“, takže u ní NEBUDE naplánováno odeslání v určitý čas. Pro odeslání naplánovaném v určitý čas klikněte (po vložení platného času odeslání) na tlačítko „Odeslat kolem“ v zeleném rámečku. Opravdu chcete zprávu vložit do vaší „Pošty k odeslání“?
ConfirmAgain=Zobrazit toto varování příště
EnigmailIncompatTitle={NAME} / Enigmail - problém s kompatibilitou
InvalidArgsTitle=Neplatné argumenty funkce
InvalidArgsBody=Argumenty funkce nejsou platné. Zadejte JavaScriptový seznam bez uzavírajících hranatých závorek.
EditorReadMeCode=// Vítejte v editoru funkcí pro „{NAME}“! //\n//\n// Pomocí tohoto editoru můžete vytvářet JavaSkriptové funkce obsahující\n// komplexní logiku plánování zpráv, které můžou být připojené k tlačítkovým\n// předvolbám, nebo vybrané v „{NAME}“ dialogu.\n//\n// Jak můžete vidět výše, když je plánovací funkce vyvolána, bude mít tři \n// argumenty:\n// * "specname" se používá, pokud chcete, aby funkce vytvořila opakování\n// (více níže)\n// * "prev"  je předchozí naplánovaný čas odeslání, pokud se jedná o \n// opakující se vyvolání\n// * "args" je extra argument vrácený předchozím vyvoláním, pokud se jedná\n// o opakující se vyvolání\n//\n// Ve vašem kódu musí být proměnné "next", "nextspec", a\n// "nextargs" určené následovně:\n//\n// * "next" je buď počet minut v budoucnosti, nebo objekt Date indikující,\n// kdy by měla být zpráva odeslána\n// * "nextspec" je specifikace opakování, pokud se má jednat o opakující \n// se zprávu (podívejte se na\n// https://blog.kamens.us/send-later/#dynamic-recurrence). Pokud toto\n// nenastavíte, bude zpráva odeslaná pouze jednou. Pozn.: Pokud chcete,\n// aby byla vaše funkce vyvolaná znovu pro opakování zadejte tohle:\n// nextspec = "funkce " + specname;\n// * "nextargs" je pole argumentů, které chcete předat do dalšího\n// vyvolání funkce jako "args".\n//\n// Během práce na vaší funkci ji můžete otestovat vyplněním hodnot\n// pro  "prev" a "args" v textových polích níže a pak kliknutím na „Spustit“\n// pro spuštění funkce a zobrazení výsledků.\n//\n// Nahoře najdete dvě předdefinované ukázkové funkce\n// „BusinessHours“ (Úřední hodiny) a „DaysInARow“ (Dny po sobě), na které\n// se můžete podívat a vyzkoušet si je, abyste se o nich dozvěděli víc.\n//\n// Tato funkce „ReadMeFirst“ umí jenom odeslat zprávu nyní,\n// jak je nadefinováno na následujícím řádku:\nnext = new Date();
_BusinessHoursCode=// Výchozí hodnoty\nvar workDays = [1, 2, 3, 4, 5]; // Po - Pá; Ne == 0, So == 6 \nvar workStart = [8, 30]; // Začátek pracovní doby ve formátu [H, M] \nvar workEnd = [17, 30]; // Konec pracovní doby ve formátu [H, M] \nif (args && args[0])\n    workDays = args[0]; \nif (args && args[1])\n    workStart = args[1]; \nif (args && args[2])\n    workEnd = args[2];\nif (prev)     \n    // Běžně se nepoužívá, ale používá se jako aktuální čas pro testování.\n    next = new Date(prev); \nelse\n    next = new Date();\n// Pokud se dostaneme za konec pracovních hodin, nebo není pracovní den,\n// přejdeme na začátek dalšího pracovního dne.\nwhile ((next.getHours() > workEnd[0]) || \n      (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) || \n      (workDays.indexOf(next.getDay()) == -1)) { \n   next.setDate(next.getDate() + 1); \n   next.setHours(workStart[0]); \n   next.setMinutes(workStart[1]); \n} \n// Pokud jsme před začátkem pracovního dne, přejdeme na jeho začátek.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
DaysInARowCode=// Odešle zprávu poprvé teď a dále pak jednou za den.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // Kopie argumentu date, abychom ho neupravili.\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n    // ^^^ Nechceme zprávu odeslat v minulosti v případě, že Thunderbird\n    // spal v naplánovaném čase odeslání.\n}\nif (! args) // Ve výchozím nastavení odešle zprávu třikrát.\n    args = [3];\nnextargs = [args[0] - 1];\n// Opakovat, pokud ještě nebylo dost odeslaní.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DiscardConfirmTitle=Zahodit změny?
DiscardConfirmBody=Máte neuložené změny. Chcete je zahodit?
UntestedSaveTitle=Uložit neotestovanou funkci?
BadSaveTitle=Neplatný název funkce nebo kód
ReplacingFunctionTitle=Přepsat existující funkci?
ImportError=Chyba importu
ExportTitle=Zvolte cíl exportu
RenameFunctionTitle=Přejmenovat existující funkci?
RenameFunctionRenameButton=Přejmenovat
cancel_on_reply=zrušit po odpovědi
